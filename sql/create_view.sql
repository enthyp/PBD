// Najczęsci klienci//
CREATE VIEW The_Best_Clients_V AS
SELECT CLIENT_NAME,COUNT(*) AS "the number of transactions"
FROM BOOKINGS
       JOIN CLIENTS ON BOOKINGS.CLIENT_ID = CLIENTS.CLIENT_ID
GROUP BY BOOKINGs.CLIENT_ID, CLIENT_NAME
ORDER BY COUNT(*) DESC


//Klienci którzy zalegają z wpłatą//
CREATE VIEW People_Default_With_Payment AS
SELECT CLIENT_NAME
FROM BOOKINGS
            JOIN CLIENTS ON BOOKINGS.CLIENT_ID = CLIENTS.CLIENT_ID
WHERE BOOKING_ID NOT IN (SELECT BOOKING_ID FROM PAYMENTS);


//Dostepne konferencje//
CREATE VIEW Available_Conferences_V AS
SELECT DISTINCT CONFERENCE_NAME
FROM CONFERENCES
       JOIN CONFERENCE_DAYS ON CONFERENCES.CONFERENCE_ID = CONFERENCE_DAYS.CONFERENCE_ID
       JOIN CONF_DAY_BOOKINGS ON CONF_DAY_BOOKINGS.CONF_DAY_ID = CONFERENCE_DAYS.CONF_DAY_ID
WHERE Limit > NUMBER_OF_ATTENDEES + NUMBER_OF_STUDENTS


//Dostepne dni konferencji//
CREATE VIEW Available_Conference_Days_V AS
SELECT CONFERENCE_NAME, DAY_DATE
FROM CONFERENCE_DAYS
       JOIN CONFERENCES ON CONFERENCE_DAYS.CONFERENCE_ID = CONFERENCES.CONFERENCE_ID
       JOIN CONF_DAY_BOOKINGS ON CONFERENCE_DAYS.CONF_DAY_ID = CONF_DAY_BOOKINGS.CONF_DAY_ID
WHERE LIMIT > NUMBER_OF_STUDENTS + NUMBER_OF_ATTENDEES;\


//Dostępne warsztaty//
CREATE VIEW Available_Workshops AS
SELECT CONFERENCE_NAME, DAY_DATE, WORKSHOPS.WORKSHOP_ID
FROM WORKSHOPS
            JOIN WORKSHOP_BOOKINGS ON WORKSHOPS.WORKSHOP_ID = WORKSHOP_BOOKINGS.WORKSHOP_ID
            JOIN CONFERENCE_DAYS ON WORKSHOPS.CONF_DAY_ID = CONFERENCE_DAYS.CONF_DAY_ID
            JOIN CONFERENCES ON CONFERENCES.CONFERENCE_ID = CONFERENCE_DAYS.CONFERENCE_ID
            
            
